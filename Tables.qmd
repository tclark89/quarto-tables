---
title: "Nice Looking Tables in Quarto"
subtitle: "In HTML"
author: "Tyler Clark"
format: html
toc: true
---

# Making Tables in Quarto

There are several ways to make tables in Quarto, with 
  different pros and cons to them.
  
  
## Why Tables?

One could just print the raw data into the document, like so:

```{r}
#| label: mtcars-basic
head(mtcars)
```

But that's not very friendly or professional, is it? 
  How does someone evaluate what the data is saying?
  Why would they even read your report if you're just spitting
  out data? That is where the tools offered by 
  R^[or Python, or what have you. I use R.] and Quarto
  come in. 


## Tools of the Trade

The libraries that are used in this document are:

- The tidyverse: `library(tidyverse)`
- Knitr: `library(knitr)`
- KableExtra: `library(kableExtra)`
- gt: `library(gt)`
- DataTables: `library(DT)`
- More (`flextable`, `huxtable`, etc.) may come later

```{r}
#| label: load-libraries
#| message: false
#| warning: false

library(tidyverse)
library(knitr)
library(kableExtra)
library(gt)
library(DT)

```

## Ol' Reliable: Knitr's Kable


### The Basics

The `kable` function from the Knitr library is always a good place 
  to start when putting together a table.
  (Note that kable must be specified with `knitr::kable` since we've
  loaded kableExtra)
  
```{r}
#| label: kable-basic
mtcars %>% 
  head() %>% 
  knitr::kable()
```

Well that's not too exciting. It's not much different than just 
  printing the dataframe. It just has bolded column headers. 
  
  
### Adding some detail

Luckily `kable` has some options that we can invoke.
  For example, detailed column names.

```{r}
#| label: kable-col_names
mtcars %>% 
  head() %>% 
  knitr::kable(
    col.names = c("Miles/(US) Gallon", "Number of Cylinders",
    "Displacement (cu. in.)", "Gross Horsepower", "Rear Axle Ratio",
    "Weight (1000 lbs.)", "1/4 Mile Time", 
    "Engine (0=V-shaped, 1=Straight",
    "Transmission: (0=automatic, 1=manual)",
    "Number of Forward Gears",
    "Number of Carburetors")
  )
```

That's a little better. At least we know what the columns are, 
  though it's a little cramped.
  
### More Options

  Some other things we can do are:
  
  - Add row names: `row.names=c("Vector", "of", "names")`
    - mtcars already has rownames, so none need to be added here.
  - Add a caption: `caption = "Caption"`
  - Align text: `align = "c"`
    - This can be set table-wide or by column. The string will be repeated
  if there are more columns.
  - Specify the digits, also table-wide or by column.
  
```{r}
#| label: knitr-more-options
mtcars %>% 
  head() %>% 
  knitr::kable(
    col.names = c("Miles/(US) Gallon", "Number of Cylinders",
    "Displacement (cu. in.)", "Gross Horsepower", "Rear Axle Ratio",
    "Weight (1000 lbs.)", "1/4 Mile Time", 
    "Engine (0=V-shaped, 1=Straight",
    "Transmission: (0=automatic, 1=manual)",
    "Number of Forward Gears",
    "Number of Carburetors"),
    caption = "Motor Trend Car Road Tests",
    align = "r",
    digits=c(1, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0)
  )
```

`knitr::kable` is capable of further formatting options, but they tend
  to require writing custom CSS and passing that through options
  that are not very friendly to work with. See 
  [Yihui's site](https://bookdown.org/yihui/rmarkdown-cookbook/kable.html#customize-html-tables)
  for more details on those options. 
  Fortunately there are other tools available that let us stay within
  the realm of R programming to further modify `knitr::kable` tables.
  
## The next step: kableExtra